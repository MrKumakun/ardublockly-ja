{
	"@metadata": {
		"author": "MrKumakun",
		"lastupdated": "2024-03-01 17:52:17.365000",
		"locale": "ja",
		"messagedocumentation" : "qqq_ardublockly"
	},
	"ARD_TYPE_CHAR": "1つの文字",
	"ARD_TYPE_TEXT": "テキスト",
	"ARD_TYPE_BOOL": "論理型",
	"ARD_TYPE_SHORT": "小さな数字(8bit)",
	"ARD_TYPE_NUMBER": "数字(16bit)",
	"ARD_TYPE_LONG": "大きな数字(32bit)",
	"ARD_TYPE_DECIMAL": "浮動小数点",
	"ARD_TYPE_ARRAY": "配列",
	"ARD_TYPE_NULL": "Null",
	"ARD_TYPE_UNDEF": "未定義",
	"ARD_TYPE_CHILDBLOCKMISSING": "下位ブロックの不一致",
	"ARD_HIGH": "HIGH",
	"ARD_LOW": "LOW",
	"ARD_RISING": " ↑　立上り",
	"ARD_FALLING": " ↓　立下り",
	"ARD_CHANGE": "↑↓ 変化",
	"ARD_ANALOGREAD": "アナログ値の入力 pin#",
	"ARD_ANALOGREAD_TIP": "0 から 1024 の間の値を返します",
	"ARD_ANALOGWRITE": "アナログ値の出力 pin#",
	"ARD_ANALOGWRITE_TIP": "0 から 255 の間のアナログ値を特定のPWMポートに書き込む",
	"ARD_HIGHLOW_TIP": "ピンの出力を High もしくは Low に設定します",
	"ARD_DIGITALREAD": "デジタル値の入力 pin#",
	"ARD_DIGITALREAD_TIP": "ピンの HIGH もしくは LOW を読み込みます",
	"ARD_DIGITALWRITE": "デジタル値の出力 pin#",
	"ARD_WRITE_TO": "to",
	"ARD_DIGITALWRITE_TIP": "特定のポートを High もしくは Low に設定します",
	"ARD_BUILTIN_LED": "組込みLEDを指定",
	"ARD_BUILTIN_LED_TIP": "Arduinoに付属のLEDをオンまたはオフにします",
	"ARD_DEFINE": "Define",
	"ARD_TONE_PIN": "Tone PIN#",
	"ARD_TONE_FREQ": "周波数",
	"ARD_TONE_PIN_TIP": "オーディオトーンを生成して出力します",
	"ARD_NOTONE_PIN": "No tone PIN#",
	"ARD_NOTONE_PIN_TIP": "オーディオトーンを停止します",
	"ARD_MAP": "Map",
	"ARD_MAP_VAL": " を 0 から ",
	"ARD_MAP_VAL_END": " までの値に変換します",
	"ARD_MAP_TIP": "[0-1024] の間に再マッピングします.",
	"ARD_FUN_RUN_SETUP": "セットアップ - setup",
	"ARD_FUN_RUN_LOOP": "メインループ - loop",
	"ARD_FUN_RUN_TIP": "Arduino が定義する setup() と loop() の処理です",
	"ARD_PIN_WARN1": "Pin %1 が %2 として pin %3 を必要としていますが、すでに %4 として利用されています。",
	"ARD_SERIAL_SETUP": "",
	"ARD_SERIAL_SPEED": " を初期化します。通信速度は ",
	"ARD_SERIAL_BPS": "bps",
	"ARD_SERIAL_SETUP_TIP": "シリアル通信の同期速度を選択します",
	"ARD_SERIAL_PRINT": "に文字を出力",
	"ARD_SERIAL_PRINT_NEWLINE": "改行",
	"ARD_SERIAL_PRINT_TIP": "読取り可能なASCIIテキストとしてデータをコンソール/シリアルポートに出力します",
	"ARD_SERIAL_PRINT_WARN": "このブロックを使用するには、%1 のセットアップブロックをワークスペースに追加する必要があります",
	"ARD_SERVO_WRITE": "サーボモーター pin#",
	"ARD_SERVO_WRITE_TO": "を",
	"ARD_SERVO_WRITE_DEG_180": "度(0~180)にする",
	"ARD_SERVO_WRITE_TIP": "指定された角度にサーボを設定します",
	"ARD_SERVO_READ": "サーボモータの角度の読込み pin#",
	"ARD_SERVO_READ_TIP": "サーボの角度を読み出します",
	"ARD_SPI_SETUP": "",
	"ARD_SPI_SETUP_CONF": "通信の構成:",
	"ARD_SPI_SETUP_SHIFT": "ビット出力方向",
	"ARD_SPI_SETUP_MSBFIRST": "MSBFIRST",
	"ARD_SPI_SETUP_LSBFIRST": "LSBFIRST",
	"ARD_SPI_SETUP_DIVIDE": "クロック分割",
	"ARD_SPI_SETUP_MODE": "SPIモード (idle - edge)",
	"ARD_SPI_SETUP_MODE0": "0 (Low - ↓ 立ち下がり)",
	"ARD_SPI_SETUP_MODE1": "1 (Low - ↑ 立ち上がり)",
	"ARD_SPI_SETUP_MODE2": "2 (High - ↓ 立ち下がり)",
	"ARD_SPI_SETUP_MODE3": "3 (High - ↑ 立ち上がり)",
	"ARD_SPI_SETUP_TIP": "SPI周辺機器を構成します",
	"ARD_SPI_TRANS_NONE": "none",
	"ARD_SPI_TRANS_VAL": "に",
	"ARD_SPI_TRANS_SLAVE": "を移転します。接続デバイスは pin#",
	"ARD_SPI_TRANS_TIP": "指定されたデバイスにSPIメッセージを送信します",
	"ARD_SPI_TRANS_WARN1": "このブロックを使用するには、%1 のセットアップブロックをワークスペースに追加する必要があります",
	"ARD_SPI_TRANS_WARN2": "古いpin# %1 は利用できなくなりました",
	"ARD_SPI_TRANSRETURN_TIP": "指定されたデバイスにSPIメッセージを送信し、データを取得します。",
	"ARD_STEPPER_SETUP": "ステッピングモーターのセットアップ",
	"ARD_STEPPER_MOTOR": "ステッピングモーター:",
	"ARD_STEPPER_DEFAULT_NAME": "MyStepper",
	"ARD_STEPPER_NUMBER_OF_PINS": "接続されているピンの数は ",
	"ARD_STEPPER_TWO_PINS": "2",
	"ARD_STEPPER_FOUR_PINS": "4",
	"ARD_STEPPER_PIN1": "pin1 #",
	"ARD_STEPPER_PIN2": "pin2 #",
	"ARD_STEPPER_PIN3": "pin3 #",
	"ARD_STEPPER_PIN4": "pin4 #",
	"ARD_STEPPER_REVOLVS": "１段階あたりのステップ数",
	"ARD_STEPPER_SPEED": "速度(rpm)は ",
	"ARD_STEPPER_SETUP_TIP": "ステッピングモーターのピンとその他の設定を構成します。",
	"ARD_STEPPER_STEP": "モーターを",
	"ARD_STEPPER_STEPS": "ステップ 動かす",
	"ARD_STEPPER_STEP_TIP": "ステッピングモーターを指定の数だけ動かします",
	"ARD_STEPPER_COMPONENT": "stepper",
	"ARD_COMPONENT_WARN1": "このブロックを使用するには、同じ %2 を持つ %1 構成ブロックを追加する必要があります",
	"ARD_TIME_DELAY": "待機",
	"ARD_TIME_MS": "ミリ秒",
	"ARD_TIME_DELAY_TIP": "ミリ秒単位で待ちます",
	"ARD_TIME_DELAY_MICROS": "マイクロ秒",
	"ARD_TIME_DELAY_MICRO_TIP": "マイクロ秒単位で待ちます",
	"ARD_TIME_MILLIS": "現在の経過時間(ミリ秒)",
	"ARD_TIME_MILLIS_TIP": "Arduino ボードが現在のプログラムの実行を開始してからのミリ秒数を返します。longで格納する必要があります",
	"ARD_TIME_MICROS": "現在の経過時間(マイクロ秒)",
	"ARD_TIME_MICROS_TIP": "Arduino ボードが現在のプログラムの実行を開始してからのマイクロ秒数を返します。longで格納する必要があります",
	"ARD_TIME_INF": "停止 (無限ループ)",
	"ARD_TIME_INF_TIP": "プログラムが停止します。CPUがビジー状態になるので注意が必要です。割込みは動作します",
	"ARD_VAR_AS": "は、",
	"ARD_VAR_AS_TIP": "特定のタイプに値を設定します",
	"ARD_PULSE_READ": "pin# %2 で %1 のパルスを測定します",
	"ARD_PULSE_READ_TIMEOUT": "%3 μsを待った後に、pin# %2 で %1 のパルスを測定します",
	"ARD_PULSE_TIP": "選択したピンのパルスの持続時間を測定します",
	"ARD_PULSETIMEOUT_TIP": "マイクロ秒単位でタイムアウトする場合のみ、選択したピンのパルスの持続時間を測定します",
	"ARD_SETTONE": "トーンを出力 pin #",
	"ARD_TONEFREQ": "、周波数は",
	"ARD_TONE_TIP": "ピンの出力を、トーン 31 ～ 65535 の範囲内の指定された周波数に設定します",
	"ARD_TONE_WARNING": "周波数は 31 ～ 65535 の範囲内である必要があります",
	"ARD_NOTONE": "トーンの出力を停止 pin #",
	"ARD_NOTONE_TIP": "選択したピンのトーンをオフにします",
	"NEW_INSTANCE": "インスタンスを作成中...",
	"RENAME_INSTANCE": "インスタンス名の変更中...",
	"NEW_INSTANCE_TITLE": "新しいインスタンスの名前:",
	"RENAME_INSTANCE_TITLE": "すべての '%1' インスタンスの名前を変更します:"
}
